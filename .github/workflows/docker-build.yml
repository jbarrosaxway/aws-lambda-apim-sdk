name: Docker Build

on:
  workflow_dispatch:  # Execução manual
  push:
    branches: [ master ]
    paths:
      - 'Dockerfile*'
      - 'scripts/docker/**'

jobs:
  build-docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      run: |
        # Build da imagem usando Dockerfile.build
        docker build -f Dockerfile.build -t axwayjbarros/aws-lambda-apim-sdk:${{ github.sha }} .
        docker build -f Dockerfile.build -t axwayjbarros/aws-lambda-apim-sdk:latest .
        
        # Push das imagens para Docker Hub
        docker push axwayjbarros/aws-lambda-apim-sdk:${{ github.sha }}
        docker push axwayjbarros/aws-lambda-apim-sdk:latest
        
    - name: Test Docker image
      run: |
        # Testar Java
        docker run --rm axwayjbarros/aws-lambda-apim-sdk:latest java -version
        # Testar Axway
        docker run --rm axwayjbarros/aws-lambda-apim-sdk:latest ls -la /opt/axway/
        # Testar Policy Studio
        docker run --rm axwayjbarros/aws-lambda-apim-sdk:latest ls -la /opt/axway/Axway-7.7.0.20240830/policystudio/
        
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'axwayjbarros/aws-lambda-apim-sdk:latest'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif' 