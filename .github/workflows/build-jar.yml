name: Build JAR

on:
  push:
    branches: [ master, main ]
    paths:
      - 'src/**'
      - 'build.gradle'
      - 'gradle/**'
  pull_request:
    branches: [ master, main ]
  workflow_dispatch:  # Execução manual

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Login to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Pull published Docker image
      run: |
        # Pull da imagem publicada
        docker pull axwayjbarros/aws-lambda-apim-sdk:1.0.0
        
    - name: Build JAR using published image
      run: |
        # Executar build do JAR usando a imagem publicada
        docker run --rm \
          -v "$(pwd):/workspace" \
          -v "$(pwd)/build:/workspace/build" \
          -v "$(pwd)/.gradle:/workspace/.gradle" \
          -w /workspace \
          axwayjbarros/aws-lambda-apim-sdk:1.0.0 \
          bash -c "
            echo '🔧 Configurando ambiente...'
            export JAVA_HOME=/opt/java/openjdk-11
            export PATH=\$JAVA_HOME/bin:\$PATH
            
            echo '📦 Verificando Java...'
            java -version
            
            echo '📦 Verificando Gradle...'
            gradle --version || echo 'Gradle não encontrado, instalando...'
            
            echo '🔨 Executando build...'
            gradle clean build
            
            echo '📋 Verificando resultado...'
            ls -la build/libs/ || echo 'Diretório build/libs não encontrado'
          "
        
    - name: Test JAR
      run: |
        # Verificar se o JAR foi criado
        echo "🔍 Verificando JAR criado..."
        ls -la build/libs/aws-lambda-apim-sdk-*.jar || echo "❌ JAR não encontrado"
        
        # Verificar conteúdo do JAR
        echo "📋 Conteúdo do JAR:"
        jar -tf build/libs/aws-lambda-apim-sdk-*.jar | head -10 || echo "❌ Não foi possível verificar conteúdo"
        
        # Verificar tamanho do JAR
        echo "📏 Tamanho do JAR:"
        du -h build/libs/aws-lambda-apim-sdk-*.jar || echo "❌ Não foi possível verificar tamanho"
        
        # Verificar se o JAR contém as classes principais
        echo "🔍 Verificando classes principais..."
        jar -tf build/libs/aws-lambda-apim-sdk-*.jar | grep -E "(AWSLambdaFilter|AWSLambdaProcessor)" || echo "❌ Classes principais não encontradas"
        
    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v4
      with:
        name: aws-lambda-apim-sdk-jar
        path: build/libs/aws-lambda-apim-sdk-*.jar
        retention-days: 30
        
    - name: Comment on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const path = require('path');
          
          try {
            const jarFiles = fs.readdirSync('build/libs').filter(file => file.endsWith('.jar'));
            const jarFile = jarFiles[0];
            const jarPath = path.join('build/libs', jarFile);
            const stats = fs.statSync(jarPath);
            const sizeInMB = (stats.size / (1024 * 1024)).toFixed(2);
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `✅ Build concluído com sucesso!
              
              📦 **JAR criado:** ${jarFile}
              📏 **Tamanho:** ${sizeInMB} MB
              🔧 **Build com:** axwayjbarros/aws-lambda-apim-sdk:1.0.0
              
              O JAR está disponível como artifact para download.`
            });
          } catch (error) {
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `❌ Build falhou!
              
              Erro: ${error.message}
              
              Verifique os logs para mais detalhes.`
            });
          } 