name: CI

on:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Pull pre-built Docker image
      run: |
        # Usar imagem pré-construída do Docker Hub
        docker pull axwayjbarros/aws-lambda-apim-sdk:1.0.0
        
    - name: Build JAR using Docker
      run: |
        # Executar build do JAR dentro do container
        docker run --rm \
          -v "$(pwd)/build:/workspace/build" \
          axwayjbarros/aws-lambda-apim-sdk:1.0.0 \
          gradle -Daxway.base=/opt/Axway buildJarLinux
          
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: aws-lambda-apim-sdk
        path: build/libs/aws-lambda-apim-sdk-*.jar
        
    - name: Test JAR
      run: |
        # Verificar se o JAR foi criado
        ls -la build/libs/aws-lambda-apim-sdk-*.jar
        # Verificar conteúdo do JAR
        jar -tf build/libs/aws-lambda-apim-sdk-*.jar | head -10
        # Verificar tamanho do JAR
        du -h build/libs/aws-lambda-apim-sdk-*.jar 